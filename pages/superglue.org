#+TITLE: SuperGlue
#+tags: [[graph network]], [[Descriptor Matching]], #attention, #transformer, #GNN, #zotero, #literature-notes, #reference
#+authors: [[Paul-Edouard Sarlin]], [[Daniel DeTone]], [[Tomasz Malisiewicz]], [[Andrew Rabinovich]]
#+type: [[Article]]
#+citekey: sarlinSuperGlueLearningFeature2020
#+publication date: [[2020-03-28]]

** SuperGlue: Learning Feature Matching with Graph Neural Networks #reading
*** Zotero Metadata

**** [http://arxiv.org/abs/1911.11763](http://arxiv.org/abs/1911.11763)
**** 
**** PDF Attachments
	- [[Sarlin et al. - 2020 - SuperGlue Learning Feature Matching with Graph Ne.pdf][zotero://open-pdf/library/items/27S4XGIZ]]
**** [[abstract]]:
***** 能够同时进行特征匹配以及滤除外点的网络
***** This paper introduces SuperGlue, a neural network that matches two sets of local features by jointly ﬁnding correspondences and rejecting non-matchable points.
***** Assignments are estimated by solving a ^^differentiable optimal transport problem^^, whose costs are predicted by a graph neural network.
***** We introduce a ﬂexible *context aggregation* mechanism based on [[attention]], enabling SuperGlue to reason about the underlying 3D scene and feature assignments jointly. Compared to traditional, hand-designed heuristics, our technique learns priors over geometric transformations and regularities of the 3D world through end-to-end training from image pairs. SuperGlue outperforms other learned approaches and achieves state-of-the-art results on the task of pose estimation in challenging real-world indoor and outdoor environments. The proposed method performs matching in real-time on a modern GPU and can be readily integrated into modern SfM or SLAM systems. The code and trained weights are publicly available at github.com/magicleap/SuperGluePretrainedNetwork.
**** zotero items: [Local library](zotero://select/items/1_YITE6WWJ)
** Abstract
***
*** matches two sets of local features by jointly finding correspondences and rejecting non-matchable points
*** 特征匹配是通过求解可微分最优化转移问题（ optimal transport problem）来解决
*** 损失函数由 [[graph network]] 来构建
**** use [[attention]] to solve an assignment optimization proglem
**** partial assignment (handle partial point visibility and occlusion)
*** 受到 [[transformer]] 启发,同时将 [[self-attention]] 和[[cross-attention]]利用特征点位置以及其视觉外观进行匹配
** [[https://i.imgur.com/jnHec3w.png][Feature matching]]
*** acts as a *middle-end* between handcrafted or learned front-end and back-end
** [[Graph Matching]]
*** 这类方法将特征的匹配问题描述成“quadratic assignment problems”，这是一个NP-hard问题，求解这类问题需要复杂不切实际的算子
*** 后来的研究者将这个问题化简成“linear assignment problems”，但仅仅用了一个浅层模型
*** 图匹配问题可以认为是一种 *optimal transport* 问题
**
** Architecture
:PROPERTIES:
:heading: true
:background_color: rgb(121, 62, 62)
:END:
*** [[https://i.imgur.com/6sWQRoA.png][]]
***