{:journal-basis "daily" 

 :project {
           ;; Selected public notes can be published to https://logseq.com/your-project-or-your-username.
           :name "issues"
           :alias ""
           ;; your twitter handle
           :twitter ""
           ;; description supports both hiccup and html
           :description ""}

 ;; Currently, we support either "Markdown" or "Org".
 ;; This can overwrite your global preference so that
 ;; maybe your personal preferred format is Org but you'd
 ;; need to use Markdown for some projects.
 ;; :preferred-format ""

 ;; Git settings
 :git-pull-secs 300
 :git-push-secs 200
 :git-auto-push true

 ;; The app will ignore those directories or files.
 ;; E.g. "/archived" "/test.md"
 :hidden []

 ;; When creating the new journal page, the app will use your template content here.
 ;; Example for Markdown users: "## [[Work]]\n###\n## [[Family]]\n###\n
 ;; Example for Org mode users: "** [[Work]]\n***\n** [[Family]]\n***\n
 :default-templates
 {:journals ""}
   
 :default-home {:page "Notes"
                :sidebar "Contents" }

 :enable-grammarly? true
 
 :all-pages-public? true

 ;; The app will show those queries in today's journal page,
 ;; the "NOW" query asks the tasks which need to be finished "now",
 ;; the "NEXT" query asks the future tasks.
 :default-queries
 {:journals
  [
        {:title "🔨 NOW"
        :query [:find (pull ?h [*])
                :in $ ?start ?today
                :where
                [?h :block/marker ?marker]
                [?h :block/page ?p]
                [?p :page/journal? true]
                [?p :page/journal-day ?d]
                [(>= ?d ?start)]
                [(<= ?d ?today)]
                [(contains? #{"NOW" "DOING"} ?marker)]]
        :inputs [:14d :today]
        :result-transform (fn [result]
                        (sort-by (fn [h]
                                        (get h :block/priority "Z")) result))
        :collapsed? false}

        {:title "📅 NEXT"
        :query [:find (pull ?h [*])
                :in $ ?start ?next
                :where
                [?h :block/marker ?marker]
                [?h :block/ref-pages ?p]
                [?p :page/journal? true]
                [?p :page/journal-day ?d]
                [(> ?d ?start)]
                [(< ?d ?next)]
                [(contains? #{"NOW" "LATER" "TODO"} ?marker)]]
        :inputs [:today :7d-after]
        :collapsed? false}

        {:title "📅 临近DeadLine"
        :query [:find (pull ?b [*])
                :in $ ?start ?next
                :where
                [?b :block/deadline ?d]
                [?b :block/marker ?marker]
                [(> ?d ?start)]
                [(< ?d ?next)]
                [(contains? #{"NOW" "LATER" "DOING" "TODO"} ?marker)]]
        :inputs [:today :7d-after]
        :collapsed? false}

        {:title "⚠️ 过期DeadLine"
        :query [:find (pull ?b [*])
                :in $ ?start
                :where
                [?b :block/deadline ?d]
                [?b :block/marker ?marker]
                [(< ?d ?start)]
                [(contains? #{"NOW" "LATER" "DOING" "TODO"} ?marker)]]
        :inputs [:today]
        :collapsed? false}

        {:title "🏄 Document wandering"
        :query [:find (pull ?b [*])
                :where
                [?p :page/name ?name]
                [?b :block/ref-pages ?p]
                [(contains? #{"3.5💗️" "4💗️" "4.5💗️" "5💗️"} ?name)]]
        :result-transform (fn [blocks]
                        (take 5 (shuffle (take 100 blocks))))}
   
   	{:title "❔ Questions"
         :query [:find (pull ?b [*])
                 :where
                 [?p :page/name ?name]
                 [?b :block/ref-pages ?p]
                 [(contains? #{"?"} ?name)]] }       
                  
                  

        {:title "📚 To Read"
        :query [:find (pull ?b [*])
                :where
                [?p :page/name "toread"]
                [?b :block/ref-pages ?p]]
        :collapsed? true}


    ]}

 ;; Add your own commands to speedup.
 ;; E.g. [["js" "Javascript"]]
 :commands
 []

 ;; Macros replace texts and will make you more productive.
 ;; For example:
 ;; Add this to the macros below:
 ;; {"poem" "Rose is $1, violet's $2. Life's ordered: Org assists you."}
 ;; input "{{{poem(red,blue)}}}"
 ;; becomes
 ;; Rose is red, violet's blue. Life's ordered: Org assists you.
 :macros { "file" "[[/assets/$1][$1]]" }
   :ui/show-brackets? false}